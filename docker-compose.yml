services:
  # -------------------
  # Airflow Webserver
  # -------------------
  airflow-webserver:
    build: .
    container_name: identity_airflow_web
    restart: always
    command: webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__FERNET_KEY=1yzYrkH-Igsab7Gdsxmcg7Kx3wmgeUG84iAJLhPRkJ0=
      - MONGO_URI=mongodb://mongo:27017/identity_db
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=newpassword
    volumes:
      - .:/opt/airflow/identity-mapping          # ðŸ‘ˆ Full project mount
      - ./dags:/opt/airflow/dags                 # DAGs visible in UI
      - ./spiders.txt:/opt/airflow/identity-mapping/spiders.txt
      - ./logs:/opt/airflow/logs                 # ðŸ‘ˆ Host logs mount
    depends_on:
      - postgres
      - mongo
      - neo4j
    ports:
      - "8080:8080"

  # -------------------
  # Airflow Scheduler
  # -------------------
  airflow-scheduler:
    build: .
    container_name: identity_airflow_scheduler
    restart: always
    command: scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=1yzYrkH-Igsab7Gdsxmcg7Kx3wmgeUG84iAJLhPRkJ0=
    volumes:
      - .:/opt/airflow/identity-mapping
      - ./dags:/opt/airflow/dags
      - ./spiders.txt:/opt/airflow/identity-mapping/spiders.txt
      - ./logs:/opt/airflow/logs                 # ðŸ‘ˆ Host logs mount
    depends_on:
      - airflow-webserver
      - postgres
      - mongo
      - neo4j

  # -------------------
  # Postgres (for Airflow metadata)
  # -------------------
  postgres:
    image: postgres:14
    container_name: identity_postgres
    restart: always
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # -------------------
  # MongoDB (scraped data)
  # -------------------
  mongo:
    image: mongo:6
    container_name: identity_mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  # -------------------
  # Neo4j (graph storage)
  # -------------------
  neo4j:
    image: neo4j:5
    container_name: identity_neo4j
    restart: always
    environment:
      - NEO4J_AUTH=neo4j/newpassword
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data

volumes:
  postgres_data:
  mongo_data:
  neo4j_data:

